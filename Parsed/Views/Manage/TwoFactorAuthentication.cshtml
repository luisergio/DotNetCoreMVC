@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model TwoFactorAuthenticationViewModel
@{
    ViewData["Title"] = Localizer["2FA"];
    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);
}

<h4>@ViewData["Title"]</h4>
@if (Model.Is2faEnabled)
{
    if (Model.RecoveryCodesLeft == 0 || Model.RecoveryCodesLeft == 1)
    {
        <div class="alert alert-danger">
            <strong>@Localizer[Model.RecoveryCodesLeft + "CodesLeft"]</strong>
            <p>@Localizer[Model.RecoveryCodesLeft + "CodesLeftDescription"]</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft <= 3)
    {
        <div class="alert alert-warning">
            <strong>@Localizer["CodesLeftDescription", @Model.RecoveryCodesLeft]</strong>
            <p>@Localizer["CodesLeftDescription"]</p>
        </div>
    }

    <a asp-action="Disable2faWarning" class="btn btn-default">@Localizer["Disable2FA"]</a>
    <a asp-action="GenerateRecoveryCodesWarning" class="btn btn-default">@Localizer["ResetRecoveryCodes"]</a>
}

<h5>@Localizer["AuthenticatorApp"]</h5>
@if (!Model.HasAuthenticator)
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">@Localizer["AddAuthenticatorApp"]</a>
}
else
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">@Localizer["ConfigureAuthenticatorApp"]</a>
    <a asp-action="ResetAuthenticatorWarning" class="btn btn-default">@Localizer["ResetAuthenticatorKey"]</a>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
